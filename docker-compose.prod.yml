version: '3.8'

# Production Docker Compose Configuration
# This file is used for production deployment

# Service definitions
services:
  # Application service
  ybds-be:
    container_name: ${YBDS_BE_CONTAINER_NAME}
    image: ${GITLAB_REGISTRY}/${YBDS_BE_DOCKER_IMAGE}:${YBDS_BE_PIPELINE_NUMBER}
    expose:
      - ${SERVER_PORT}
    environment:
      # Database connection
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_ACCOUNT_NAME=${DB_ACCOUNT_NAME}
      - DB_NOTIFICATION_NAME=${DB_NOTIFICATION_NAME}
      - DB_ORDER_NAME=${DB_ORDER_NAME}
      - DB_PRODUCT_NAME=${DB_PRODUCT_NAME}
      - DB_SSL_MODE=require
      # Application settings
      - SERVER_PORT=${SERVER_PORT}
      - ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRY=${JWT_EXPIRY}
      - UPLOAD_DIR=${UPLOAD_DIR}
      - UPLOAD_MAX_SIZE_MB=${UPLOAD_MAX_SIZE_MB}
    volumes:
      - uploads-data:/app/uploads
    restart: always
    networks:
      - product

  # Backup service for uploaded files
  backup:
    image: alpine:latest
    container_name: ybds-backup
    volumes:
      - uploads-data:/data/uploads
      - ./backups:/backups
    command: |
      sh -c "
        apk add --no-cache tar gzip
        mkdir -p /backups
        tar -czf /backups/uploads-backup-\$(date +%Y%m%d-%H%M%S).tar.gz -C /data uploads
        find /backups -name 'uploads-backup-*.tar.gz' -mtime +7 -delete
      "
    restart: always
    depends_on:
      - ybds-be
    networks:
      - product
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M

# Volume definitions
volumes:
  # Persistent storage for uploaded files
  uploads-data:
    driver: local

# Network definitions
networks:
  # Network for container communication
  product:
    external: true 