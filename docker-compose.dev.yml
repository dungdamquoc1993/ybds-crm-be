version: '3.8'

# Development Docker Compose Configuration
services:
  ybds-be:
    container_name: ${YBDS_BE_CONTAINER_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    environment:
      # Database connection
      - DB_HOST=host.docker.internal
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_ACCOUNT_NAME=${DB_ACCOUNT_NAME}
      - DB_NOTIFICATION_NAME=${DB_NOTIFICATION_NAME}
      - DB_ORDER_NAME=${DB_ORDER_NAME}
      - DB_PRODUCT_NAME=${DB_PRODUCT_NAME}
      - DB_SSL_MODE=${DB_SSL_MODE}
      # Application settings
      - SERVER_PORT=${SERVER_PORT}
      - ENV=development
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRY=${JWT_EXPIRY}
      - UPLOAD_DIR=${UPLOAD_DIR}
      - UPLOAD_MAX_SIZE_MB=${UPLOAD_MAX_SIZE_MB}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      # S3 settings
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - AWS_S3_PREFIX=${AWS_S3_PREFIX}
      # GHN webhook secret
      - GHN_WEBHOOK_SECRET=${GHN_WEBHOOK_SECRET}
    volumes:
      - uploads-data:/app/uploads
      - ./:/app/src
    restart: unless-stopped
    networks:
      - product

# Volume definitions
volumes:
  # Persistent storage for uploaded files
  uploads-data:
    driver: local

# Network definitions
networks:
  # Network for container communication
  product:
    external: true 