stages:
  - build
  - deploy

variables:
  DOCKER_TLS_CERTDIR: ''
  DOCKER_DRIVER: overlay2
  # Database connection
  DB_HOST: $DB_HOST
  DB_PORT: $DB_PORT
  DB_USER: $DB_USER
  DB_PASS: $DB_PASS
  DB_ACCOUNT_NAME: $DB_ACCOUNT_NAME
  DB_NOTIFICATION_NAME: $DB_NOTIFICATION_NAME
  DB_ORDER_NAME: $DB_ORDER_NAME
  DB_PRODUCT_NAME: $DB_PRODUCT_NAME
  DB_SSL_MODE: require
  # Application settings
  SERVER_PORT: $SERVER_PORT
  ENV: $ENV
  JWT_SECRET: $JWT_SECRET
  JWT_EXPIRY: $JWT_EXPIRY
  UPLOAD_DIR: $UPLOAD_DIR
  UPLOAD_MAX_SIZE_MB: $UPLOAD_MAX_SIZE_MB

image: docker:27.0.3

services:
  - name: docker:27.0.3-dind
    alias: docker

# build:
#   stage: build
#   image: alpine:latest
#   before_script:
#     - apk update
#     - apk add --no-cache docker
#   script:
#     - echo $GITLAB_ACCESS_TOKEN | docker login $GITLAB_REGISTRY --username gitlab-ci-token --password-stdin
#     - docker build --file Dockerfile -t $GITLAB_REGISTRY/$YBDS_BE_DOCKER_IMAGE:$YBDS_BE_PIPELINE_NUMBER .
#     - docker tag $GITLAB_REGISTRY/$YBDS_BE_DOCKER_IMAGE:$YBDS_BE_PIPELINE_NUMBER $GITLAB_REGISTRY/$YBDS_BE_DOCKER_IMAGE:$YBDS_BE_PIPELINE_NUMBER
#     - docker push $GITLAB_REGISTRY/$YBDS_BE_DOCKER_IMAGE:$YBDS_BE_PIPELINE_NUMBER
#   after_script:
#     - rm -rf /usr/local/share/.cache
#     - rm -rf /tmp/*                   
#   tags:
#     - ybds-be

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk update
    - apk add --no-cache openssh-client
  script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIV_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -p $SSH_PORT $SSH_HOST >> ~/.ssh/known_hosts
    - >
      ssh -i ~/.ssh/id_rsa -p $SSH_PORT -T -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
      cd /var/$SSH_DEPLOY_DIR &&
      echo $GITLAB_ACCESS_TOKEN | docker login $GITLAB_REGISTRY --username gitlab-ci-token --password-stdin &&

      export GITLAB_REGISTRY=$GITLAB_REGISTRY &&

      export YBDS_BE_DOCKER_IMAGE=$YBDS_BE_DOCKER_IMAGE &&
      export YBDS_BE_PIPELINE_NUMBER=$YBDS_BE_PIPELINE_NUMBER &&

      export YBDS_BE_CONTAINER_NAME=$YBDS_BE_CONTAINER_NAME &&

      export DB_HOST=$DB_HOST &&
      export DB_USER=$DB_USER &&
      export DB_PASS=$DB_PASS &&
      export DB_PORT=$DB_PORT &&
      export DB_SSL_MODE=$DB_SSL_MODE &&

      export DB_ACCOUNT_NAME=$DB_ACCOUNT_NAME &&
      export DB_NOTIFICATION_NAME=$DB_NOTIFICATION_NAME &&
      export DB_ORDER_NAME=$DB_ORDER_NAME &&
      export DB_PRODUCT_NAME=$DB_PRODUCT_NAME &&

      export SERVER_PORT=$SERVER_PORT &&
      export ENV=$ENV &&

      export JWT_SECRET=$JWT_SECRET &&
      export JWT_EXPIRY=$JWT_EXPIRY &&

      export UPLOAD_DIR=$UPLOAD_DIR &&
      export UPLOAD_MAX_SIZE_MB=$UPLOAD_MAX_SIZE_MB &&

      docker-compose -f docker-compose.ybds-be.prod.yml pull && 
      docker-compose -f docker-compose.ybds-be.prod.yml up -d --force-recreate &&
      echo 'Ybds-be container started version ${YBDS_BE_PIPELINE_NUMBER}' "
  environment:
    name: product
  tags:
    - ybds-be
